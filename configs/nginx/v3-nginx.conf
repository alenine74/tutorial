server {
    listen 80;
    server_name ts.zxcode.xyz;

    # Redirect all HTTP requests to HTTPS
    if ($host = ts.zxcode.xyz) {
        return 301 https://$host$request_uri;
    }

    return 404;
}

server {
    listen 443 ssl;
    server_name ts.zxcode.xyz;

    charset utf-8;
    autoindex on;
    auth_basic "Restricted Area";
    auth_basic_user_file /etc/nginx/.htpasswd;
    proxy_set_header Authorization "";

    ssl_certificate /etc/letsencrypt/live/ts.zxcode.xyz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ts.zxcode.xyz/privkey.pem; # managed by Certbot
    access_log /var/log/nginx/access_report.log;
    error_log /var/log/nginx/error_report.log;

        location / {
      return 301 https://$host/report/v3-ci-instance1;
        }
      location /report/v3-ci-instance1 {
        proxy_pass http://127.0.0.1:5600;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
     }

    location /v3-ci-instance1 {
        alias /v3-instance1/v3-ci/www-data;
        autoindex on;
    }

    location /v3-ci-instance2 {
        alias /v3-instance2/v3-ci/www-data;
        autoindex on;
    }

    location /v3-ci-instance3 {
        alias /v3-instance3/v3-ci/www-data;
        autoindex on;
    }


location ~ ^/v3-ci-instance4/([^/]+)/(\d+)(/.*)?$ {
    alias /v3-instance4/$1/$2/v3-ci/www-data$3;
    autoindex on;
}

    location /v3-ci-instance5 {
        alias /v3-instance5/v3-ci/www-data;
        autoindex on;
    }


    add_header Strict-Transport-Security "max-age=31536000" always; # managed by Certbot

}

server {
    listen 5000 ssl;
    server_name ts.zxcode.xyz;

    client_max_body_size 0;
    ssl_certificate /etc/letsencrypt/live/ts.zxcode.xyz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ts.zxcode.xyz/privkey.pem; # managed by Certbot

    chunked_transfer_encoding on;
    proxy_ssl_server_name on;
    proxy_buffering off;
    proxy_ignore_headers "X-Accel-Buffering";

    location /v2/ {
         auth_basic "Docker Registry";
         auth_basic_user_file /etc/nginx/.htpasswd;

        proxy_pass https://127.0.0.1:5001;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        if ($remote_user != "jojo") {
                break;
        }
        set $allowed_method 0;
        if ($request_method ~ ^(GET|HEAD|OPTIONS)$) {
                set $allowed_method 1;
        }

        if ($allowed_method = 0) {
                return 403 "send a message to your sysadmin for access.";
        }
#    limit_except GET HEAD OPTIONS {
#            auth_basic_user_file /etc/nginx/auth/readonly.htpasswd;
#       }
    }
}
