#!/bin/bash

set -euo pipefail

LOG_FILE="/var/log/cleanup_script.log"
REGISTRY_PATH="/mnt/HC_Volume_33953567/registry/docker/registry/v2"

log() {
	echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

mapfile -t _services < <(systemctl list-units --type=service --no-legend | grep '\.service' | awk '{print $1}' | grep '^v3' | grep 'service$')
_services+=("$(systemctl list-units --type=timer --no-legend | grep '\.timer' | awk '{print $1}' | grep '^v3')")

stop_service() {
	local service=$1
	log "Stopping $service"
	if ! timeout 20 sudo systemctl stop "$service"; then
		systemctl kill --signal=SIGKILL "$service"
	fi
}

stop_all_services() {
	for service in "${_services[@]}"; do
		stop_service "$service"
	done
}

delete_docker_resources() {
	log "Stopping docker service ..."
	systemctl stop docker.service
	if [[ $(systemctl is-active docker.service) == "failed" ]]; then
		rm -rf /var/lib/docker
	else
		systemctl kill --signal=SIGKILL docker.service
		rm -rf /var/lib/docker
	fi
	log "docker status is $(systemctl is-active docker.service)"
	systemctl restart docker.service
}

delete_registry_images() {
	log "Starting docker registry"
	if ! sudo docker compose -f /v3-registry/docker-compose.yml up -d; then
		log "Failed to start docker registry"
		return 1
	fi
	log "Deleting all registry images"
	sudo rm -rf "$REGISTRY_PATH" || log "Failed to delete registry images"
}

check_services_start() {
	for service in "${_services[@]}"; do
		log "$service is $(systemctl is-active "$service")"
		if [[ $(systemctl is-active "$service") != "active" ]]; then
			log "$service is not active, restarting"
			sudo systemctl restart "$service"
			sleep 5
			log "$service is now $(systemctl is-active "$service")"
		fi
	done
}

update_reboot() {
	log "Updating and upgrading system"
	if sudo apt update && sudo apt dist-upgrade --auto-remove -y; then
		log "System updated successfully, rebooting"
		sudo reboot
	else
		log "Failed to update system" >&2
		exit 1
	fi
}

_extra_func() {
	sudo rebuild-images -u postgres 15
	sudo rebuild-images -rb all
}

clean() {
	stop_all_services
	delete_docker_resourcesgg
	delete_registry_images
	_extra_func #This function will be delete later
	log "All CI services should start again"
	sleep 10
	check_services_start
}

main() {
	case "$1" in
	--clean)
		clean
		;;
	--update)
		update_reboot
		;;
	*)
		log "Invalid option. Use --clean or --update" >&2
		exit 1
		;;
	esac
}

main "$@"
